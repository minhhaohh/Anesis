<RadzenTemplateForm TItem="MediaFileFilterModel" Data="FilterModel" Submit="FilterGridAsync">
    <RadzenFieldset Text="Filter Panel"
                    class="custom-fieldset">
        <RadzenRow>
            <RadzenColumn Size="12" SizeMD="2">
                <RadzenLabel Text="Category" Component="Category" class="rz-text-subtitle2" />
                <RadzenDropDown @bind-Value="FilterModel.Category" Name="Category" AllowClear="true" Placeholder="---All---"
                                Data="FileCategories" Style="width: 100%;" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="2">
                <RadzenLabel Text="File Ext" Component="FileExt" class="rz-text-subtitle2" />
                <RadzenDropDown @bind-Value="FilterModel.FileExt" Name="FileExt" AllowClear="true" Placeholder="---All---"
                                Data="FileTypes" Style="width: 100%;" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="2">
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Style="height: 100%;">
                    <RadzenSwitch @bind-Value="FilterModel.NotSignedOnly" Name="NotSignedOnly" />
                    <RadzenLabel Text="Not Signed Only" Component="NotSignedOnly" class="rz-text-subtitle2" />
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="4">
                <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" AlignItems="AlignItems.End" Gap="0.5rem" Style="height: 100%;">
                    <RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary" Text="Filter" Icon="filter_alt" />
                    <RadzenButton ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Warning" Text="Clear" Icon="ink_eraser"
                                  Click="ClearFilterAsync" />
                    <RadzenButton ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Info" Text="Refresh" Icon="refresh"
                                  Click="RefreshGridAsync" />
                    <RadzenButton ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Success" Text="New" Icon="add"
                                  Click="OpenUploadFileDialogAsync" />
                </RadzenStack>
            </RadzenColumn>
        </RadzenRow>
    </RadzenFieldset>
</RadzenTemplateForm>

@code {
    [Parameter]
    public MediaFileFilterModel FilterModel { get; set; }
    [Parameter]
    public List<string> FileCategories { get; set; }
    [Parameter]
    public List<string> FileTypes { get; set; }

    [Parameter]
    public EventCallback<MediaFileFilterModel> OnFilterGrid { get; set; }
    [Parameter]
    public EventCallback OnRefreshGrid { get; set; }

    private async Task FilterGridAsync(MediaFileFilterModel filterModel)
    {
        FilterModel = filterModel;
        await OnFilterGrid.InvokeAsync(filterModel);
    }

    private async Task RefreshGridAsync()
    {
        await OnRefreshGrid.InvokeAsync();
    }

    private async Task ClearFilterAsync()
    {
        var model = new MediaFileFilterModel();

        await FilterGridAsync(model);
    }

    private async Task OpenUploadFileDialogAsync()
    {
        // var title = "Upload new media file";

        // var paramsDic = new Dictionary<string, object>()
        //     {
        //         { "SignatureModel", signatureModel },
        //         { "OnRefreshGrid", EventCallback.Factory.Create(this, RefreshGridAsync) },
        //     };
        // var options = new DialogOptions()
        //     {
        //         Width = ModalSizeConsts.Default,
        //     };

        // await _dialogService.OpenAsync<SignMediaFileForm>(title, paramsDic, options);
    }

}
