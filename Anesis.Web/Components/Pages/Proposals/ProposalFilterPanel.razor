<RadzenTemplateForm TItem="ProposalFilterModel" Data="FilterModel" Submit="FilterGridAsync">
    <RadzenFieldset Text="Filter Panel" AllowCollapse="true"
                    Collapse="async () => await ToggleFilterPanelAsync(true)"
                    Expand="async () => await ToggleFilterPanelAsync(false)"
                    class="custom-fieldset">
        <RadzenRow>
            <RadzenColumn Size="12" SizeMD="2">
                <RadzenStack Gap="0.5rem">
                    <RadzenLabel Text="Chart No" Component="ChartNo" class="rz-text-subtitle2" />
                    <RadzenTextBox @bind-Value="FilterModel.EcwChartNo" Name="ChartNo"
                                   PlaceHolder="Chart No" Style="width: 100%;" />

                    <RadzenLabel Text="Patient Name" Component="FirstName" class="rz-text-subtitle2" />
                    <RadzenRow>
                        <RadzenColumn Size="12" SizeMD="6">
                            <RadzenTextBox @bind-Value="FilterModel.FirstName" Name="FirstName"
                                           Placeholder="First Name" Style="width: 100%;" />
                        </RadzenColumn>
                        <RadzenColumn Size="12" SizeMD="6">
                            <RadzenTextBox @bind-Value="FilterModel.LastName" Name="LastName"
                                           Placeholder="Last Name" Style="width: 100%;" />
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="2">
                <RadzenStack Gap="0.5rem">
                    <RadzenLabel Text="Proposer" Component="ProposerId" class="rz-text-subtitle2" />
                    <RadzenDropDown @bind-Value="FilterModel.ProposerId" Name="ProposerId"
                                    Data="ActiveMidLevelProviders" AllowClear="true"
                                    TextProperty="Value" ValueProperty="Key"
                                    Placeholder="---All---" Style="width: 100%;" />

                    <RadzenLabel Text="Status" Component="RequestStatus" class="rz-text-subtitle2" />
                    <RadzenDropDown @bind-Value="FilterModel.RequestStatus" Name="RequestStatus"
                                    Data="ProposalStatus" AllowClear="true"
                                    TextProperty="Value" ValueProperty="Key"
                                    Placeholder="---All---" Style="width: 100%;"
                                    Change="(selectedValue) => { if ((int?)selectedValue > 0) { FilterModel.ExcludeCancelled = false; } }" />
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="2">
                <RadzenStack Gap="0.5rem">
                    <RadzenLabel Text="Appointment Provider" Component="ProviderId" class="rz-text-subtitle2" />
                    <RadzenDropDown @bind-Value="FilterModel.ProviderId" Name="ProviderId"
                                    Data="ActiveProviders" AllowClear="true"
                                    TextProperty="Value" ValueProperty="Key"
                                    Placeholder="---All---" Style="width: 100%;" />

                    <RadzenLabel Text="Appointment Date" Component="AppointmentDate" class="rz-text-subtitle2" />
                    <RadzenDatePicker @bind-Value="FilterModel.AppointmentDate" Name="AppointmentDate"
                                      AllowClear="true" AllowInput="false"
                                      DateFormat="MM/dd/yyyy" Placeholder="MM/dd/yyyy" Style="width: 100%;" />
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="2">
                <RadzenStack Gap="0.5rem">
                    <RadzenLabel Text="Reviewer" Component="ReviewerId" class="rz-text-subtitle2" />
                    <RadzenDropDown @bind-Value="FilterModel.ReviewerId" Name="ReviewerId"
                                    Data="ActiveDoctors" AllowClear="true"
                                    TextProperty="Value" ValueProperty="Key"
                                    Placeholder="---All---" Style="width: 100%;" />

                    <RadzenLabel Text="Appointment Location" Component="LocationId" class="rz-text-subtitle2" />
                    <RadzenDropDown @bind-Value="FilterModel.LocationId" Name="LocationId"
                                    Data="ActiveLocations" AllowClear="true"
                                    TextProperty="Value" ValueProperty="Key"
                                    Placeholder="---All---" Style="width: 100%;" />
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="2">
                <RadzenStack Gap="0.5rem">
                    <RadzenLabel Text="Proposed Procedure" Component="ProcedureId" class="rz-text-subtitle2" />
                    <RadzenDropDown @bind-Value="FilterModel.ProcedureId" Name="ProcedureId" Data="ActiveProcedures"
                                    AllowClear="true" AllowFiltering="true" ClearSearchAfterSelection="true"
                                    TextProperty="Value" ValueProperty="Key"
                                    Placeholder="---All---" Style="width: 100%;" />

                    <RadzenLabel Text="Surgery Location" Component="SurgeryLocationId" class="rz-text-subtitle2" />
                    <RadzenDropDown @bind-Value="FilterModel.SurgeryLocationId" Name="SurgeryLocationId"
                                    Data="ActiveAscLocations" AllowClear="true"
                                    TextProperty="Value" ValueProperty="Key"
                                    Placeholder="---All---" Style="width: 100%;" />
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="2">
                <RadzenStack Gap="0.5rem">
                    <RadzenLabel Text="Surgeon" Component="SurgeonId" class="rz-text-subtitle2" />
                    <RadzenDropDown @bind-Value="FilterModel.SurgeonId" Name="SurgeonId"
                                    Data="ActiveDoctors" AllowClear="true"
                                    TextProperty="Value" ValueProperty="Key"
                                    Placeholder="---All---" Style="width: 100%;" />

                    <RadzenLabel Text="Surgery Date" Component="SurgeryDate" class="rz-text-subtitle2" />
                    <RadzenDatePicker @bind-Value="FilterModel.SurgeryDate" Name="SurgeryDate"
                                      AllowClear="true" AllowInput="false"
                                      DateFormat="MM/dd/yyyy" Placeholder="MM/dd/yyyy" Style="width: 100%;" />
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="2">
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem" Style="height: 100%;">
                    <RadzenCheckBox @bind-Value="FilterModel.UnpostedChartNote" Name="UnpostedChartNote" />
                    <RadzenLabel Text="Unposted Chart Note" Component="UnpostedChartNote" class="rz-text-subtitle2" />
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="2">
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.5rem" Style="height: 100%;">
                    <RadzenCheckBox @bind-Value="FilterModel.ExcludeCancelled" TValue="bool" Name="ExcludeCancelled"
                                    Change="(isChecked) => { if (isChecked) { FilterModel.RequestStatus = null; } }" />
                    <RadzenLabel Text="Exclude Cancelled" Component="ExcludeCancelled" class="rz-text-subtitle2" />
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="8">
                <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0.5rem" Style="height: 100%;">
                    <RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary"
                                  Text="Filter" Icon="filter_alt" />
                    <RadzenButton ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Warning"
                                  Text="Clear" Icon="ink_eraser" Click="ClearFilterAsync" />
                    <RadzenButton ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Info"
                                  Text="Refresh" Icon="refresh" Click="RefreshGridAsync" />
                    @if (CanEditProposal)
                    {
                        <RadzenButton ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Success"
                                      Text="New" Icon="add" Click="OpenCreateProposalDialogAsync" />
                    }
                </RadzenStack>
            </RadzenColumn>
        </RadzenRow>
    </RadzenFieldset>
</RadzenTemplateForm>

@code {
    [Parameter]
    public bool CanEditProposal { get; set; }
    [Parameter]
    public ProposalFilterModel FilterModel { get; set; }
    [Parameter]
    public bool CollapsedFilterPanel { get; set; }
    [Parameter]
    public Dictionary<int, string> ProposalStatus { get; set; }
    [Parameter]
    public Dictionary<int, string> ActiveLocations { get; set; }
    [Parameter]
    public Dictionary<int, string> ActiveAscLocations { get; set; }
    [Parameter]
    public Dictionary<int, string> ActiveProcedures { get; set; }
    [Parameter]
    public Dictionary<int, string> ActiveProviders { get; set; }
    [Parameter]
    public Dictionary<int, string> ActiveDoctors { get; set; }
    [Parameter]
    public Dictionary<int, string> ActiveMidLevelProviders { get; set; }

    [Parameter]
    public EventCallback<bool> OnResizeGrid { get; set; }
    [Parameter]
    public EventCallback<ProposalFilterModel> OnFilterGrid { get; set; }
    [Parameter]
    public EventCallback OnRefreshGrid { get; set; }
    [Parameter]
    public EventCallback<int> OnOpenEditProposalDialog { get; set; }


    // SUPPORT METHODS
    private async Task ToggleFilterPanelAsync(bool collapsed)
    {
        CollapsedFilterPanel = collapsed;
        await ResizeGridAsync(CollapsedFilterPanel);
    }

    private async Task ResizeGridAsync(bool collapsed)
    {
        await OnResizeGrid.InvokeAsync(collapsed);
    }

    private async Task FilterGridAsync(ProposalFilterModel filterModel)
    {
        FilterModel = filterModel;
        await OnFilterGrid.InvokeAsync(filterModel);
    }

    private async Task RefreshGridAsync()
    {
        await OnRefreshGrid.InvokeAsync();
    }

    private async Task ClearFilterAsync()
    {
        var model = new ProposalFilterModel();
        await FilterGridAsync(model);
    }

    private async Task OpenCreateProposalDialogAsync()
    {
        await OnOpenEditProposalDialog.InvokeAsync(0);
    }
}
